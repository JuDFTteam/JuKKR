#### lattice parameter in units of the Bohr radius
d alat 1.0
### bravais vectors
dv bravais_a 3
dv bravais_b 3
dv bravais_c 3
### t = use Cartesian coordinates, f = use lattice coordinates
l cartesian .TRUE.
### number of k-points in each direction
iv bzdivide 3 8
### reference cluster radius
d rclust 1.5
### valence energy contour
### lower energy of contour, unit: Rydberg 
d emin
### upper energy of contour (only for DOS calculation)
d emax
### Number of Matsubara poles, npol=0 triggers DOS calculation
i npol
### number of points starting at emin, parallel to imaginary axis 
i npnt1
### number of points parallel to real axis starting from emin + imag part. 
i npnt2
### number of points parallel to real axis in interval (E_F - 30*k*T + imag, E_F + imag) 
i npnt3
### artificial temperature (Kelvin) for energy broadening, determines together with npol the distance from real axis
d tempr 800.0
### semicore contour 
### lower energy of contour, unit: Rydberg 
d ebotsemi 0.0
### upper energy of contour
d emusemi  0.0
### semicore charge renormalization factor (default=1.0)
d fsemicore 1.0
### number of points in semicore contour as 3d-vector, e.g. (2,10,2)
iv npntsemi 3 0
### solver mode: 3=iterative(default), 4=direct, 5=GPU
i solver 3
### number of self-consistency steps
i scfsteps
### mixing method (0,1=straight mixing; 4=Broyden's 2nd method, 5=gen. Anderson mixing,
### 6=Broyden's 2nd method for >1 atom per process)
i imix 0
### straight mixing parameter
d mixing
### mix (V_up - V_down) with a mixing parameter 'fcm' times larger than 'mixing'
d fcm 20.0
### abort self-consistency loop when target_rms error has been reached
d target_rms 1.0D-8
### Ewald sum cutoff in reciprocal/real space
d gmax
d rmax
### XC functional: LDA-VWN (Vosko-Wilk-Nusair) = 2, GGA-PW91 = 3, GGA-PBE = 4, GGA-PBEsol = 5
i kxc 2
### for tfQMR solver: convergence reached if relative residual is smaller than 'qmrbound'
d qmrbound 1.0D-9
### single site solver (0/1 -> Fredholm/Volterra)
i volterra 0
## num. Born iterations for non-spherical potential
i icst 4
### print more information
i kpre 0
### 1=calculate forces
i kforce 1
### use LDA+U
l ldau .FALSE.
### constant B-field that is added in each iteration
l b_field .FALSE.
### value of constant B-field that is added in each iteration
d b_field_val 0.0D0
### constrained moment, forces magnetic moment to be zero on site i
l constrain_moment .FALSE.
### constrained moment, forces magnetic moment to be zero on site i
i constrain_moment_site 1
### 1=non-scalar-relativistic 2=scalar-relativistic
i nsra 2
### 1=calculate energies, -1 = total energy only, less I/O
i kte 1
### calculate exchange couplings
l jij .FALSE.
### calculate exchange coupling constants with sites within this radius
d rcutjij 2.30
### radius of cluster used for internal Voronoi
d rclust_voronoi
### minimum number of points per panel in internal Voronoi
i nmin_panel 7
### number of points for 'muffin-tinization', create shape-function for num_MT_points in MT region, used to restrict core wavefunction to MT region
i num_MT_points 10
### determines how to set new MT-radius, choose 0.0 < MT_scale < 1.0 as factor to scale maximal MT radius to new MT radius
d MT_scale 0.98
### # Reference potential, Radius of repulsive reference potential, RMT_ref_scale <= 0.0: use same radius as for muffin-tin sphere, otherwise use RMT_ref_scale * (max. possible muffin tin radius)
d RMT_ref_scale 0.995
### distance truncation is expressed as radius for lmax (in alat units)
d cutoff_radius -1.d0
### l-dependent distance truncation is expressed as radii for s,p,d,f,g,h (alat units)
dv lcutoff_radii 9 0.d0
### near field corrections (default = 0)
i near_field 0
### activate Voronano feature
s elementdatabasepath '~/KKR/ElementDataBase'
### write shape functions (0=no, 1=yes) (default = 0)
i write_shapes 0
### shift of muffin-tin zero (default = 0.0)
d mt_zero_shift 0.0
### DEBUG: replace calculated charge densities with Morgan test charge density
i DEBUG_morgan_electrostatics 0
### use full Brillouin zone
l fullbz .FALSE.
### repulsive reference potential
d vref 8.d0
### [NOCO] turn on/off spin-orbit coupling
l soc .FALSE.
### [NOCO] SOC scaling factor
d socscale 1.0D0
### [NOCO] number of logarithmic panels
i npan_log 30
### [NOCO] number of equally distant panels
i npan_eq 30
### [NOCO] number of Chebychev points in panel
i ncheb 10
### [NOCO] size of logarithmic panel
d r_log 0.1D0
### parameter a for exponential radial mesh
d a_log 0.025D0
### unknown
l enable_quad_prec .FALSE.
### [bfields] turn on or off everything concerning non-collinear magnetic fields (called lbfield in KKRhost code)
l noncobfield .FALSE.
### [bfields] constraining fields, non-collinear magnetic field (called lbfield_constr in KKRhost code)
l constr_field .FALSE.
### [bfields] apply same field to all atoms (True) or individual fields to each atom (called lbfield_all in KKRhost code)
l same_bfield .FALSE.
### [bfields] apply only transversal bfield (called lbfield_trans in KKRhost code)
l trans_bfield .FALSE.
### [bfields] apply magnetic field only in the muffin-tin (called lbfield_mt in KKRhost code)
l mt_bfield .FALSE.
### [bfields] calculate magnetic torque (called ltorque in KKRhost code)
l torque .FALSE.
### [bfields] spin (0), orbital (1), spin+orbial (2) fields (called ibfield in KKRhost code)
i ibfield 0
### [bfields] type of contraint (0 = torque, 1 = magnetic moment) (called ibfield_constr in KKRhost code)
i iconstr 0
### [bfields] start magnetic field at iteration itscf0 (called ibfield_itscf0 in KKRhost code)
i itbfield0 0
### [bfields] stop applying magnetic field after iteration itscf1 (called ibfield_itscf1 in KKRhost code)
i itbfield1 10000

#######################################################################
#                job script for an SCF run of TB-KKR program          #
#        MAKE SURE ABOUT THE CORRECT PATH OF THE ABOVE SHELLS         #
#######################################################################
### set below the following variables
###
### here     = the current (starting) directory 
### local    = a (tmp) directory where the execution will take place 
### src      = path to the sources
### bindir   = path to the binaries to be used
home=$HOME
here=`pwd`
TMPDIR=$here 
local=$here
src=$here
bindir=$here
########################################################################
### set the INPUT and POTENTIAL file names. 
### MAKE SURE the name of the POTENTIAL file is the SAME as in the INPUT
### file (section FILES, file I13)
### Note: you can name your input-file as you wish, the script will LINK 
### it to 'inputcard'
### Here you should also set
### pref     = a general prefix of your run/system
###
input=inputcard
potential=`grep " I13" $input  |awk '{print $1}'`
if [[ ! $potential ]] ; then
potential=potential
fi
pref="SYSTEM"
########################################################################
### Some extra settings for the running options
### shapefun = the file with the shape functions if nonspher="YES"
### 
shapefun=`grep " I19" $input  |awk '{print $1}'`
if [[ ! $shapefun ]] ; then
shapefun=shapefun
fi

if test -f $shapefun ; then
nonspher="YES"
fi
########################################################################
####                        < END OF SETTINGS >                     ####
########################################################################
echo
echo  " #####################  TB-KKR SCF RUN  #####################"
echo
echo  "   starting directory     : "$here
echo  "   prefix                 : "$pref
echo
echo  "   potential              : "$potential
echo  "   input-file             : "$input
echo  "   non-spherical          : "$nonspher
if [ "$nonspher" = "YES" ] ; then
echo  "   shapefun               : "$shapefun
fi
echo
echo  " ############################################################"
#
########################################################################
####                         < PREPARE THE FILES >                  ####
########################################################################
echo
echo  " ############ PREPARING FILES FOR THE SCF-CYCLE #############"
echo
cd $local
index=1
work_name=$pref$index
while
ls -l $local | awk '{print $9}' | grep -wq "$work_name"
ls -l $here  | awk '{print $9}' | grep -wq "$work_name"
do
work_name=$pref$index
index=`expr $index + 1`
done
echo "   Working directory for this job: "
echo "  "$local/$work_name
echo
echo "   Running on:"$HOST
echo
mkdir $work_name
cd $work_name
#=======================================================================
cp $here/$input $local/$work_name/inputcard
cp $here/$potential $local/$work_name/$potential
if test -f $here/gref ; then
   cp $here/gref $local/$work_name/gref
fi
if test -f $here/qvec.dat ; then
   cp $here/qvec.dat $local/$work_name/qvec.dat
fi
if test -f $here/scoef ; then
   cp $here/scoef $local/$work_name/scoef
fi
if test -f $here/$shapefun ; then
   ln -fs $here/$shapefun $local/$work_name/$shapefun
fi
#=======================================================================
####                      < END PREPARE THE FILES >                 ####
########################################################################
####                  < RUN SCF UNTIL IT CONVERGES! :) >            ####
########################################################################
echo
echo  " ############################################################"
echo  " ###############    SCF CALCULATION STARTS   ################"
echo  " ############################################################"
echo
#=======================================================================
cd $local/$work_name
#=======================================================================
  echo 
  echo "  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
#=======================================================================
#-------------------------------------------------- iteration step begin
  echo "   CALCULATION  STARTed at: "
  echo "   "`date` 
  echo "  -----------------------------------------------------------"
  echo 
$bindir/kkr.x > out
if [  $? -ne 0  ] ; then
     rm -f core
     echo " SCF-CYCLE ERROR in kkr.x , IT WILL BE STOPPED "
     exit 1
fi
#----------------------------------------------- iteration step finished
########################################################################
#   extract info about current iteration either using
#   different grep's.
################################################
###  here the use of grep
grep -i tot out
grep 'TOTAL mag. moment in unit cell'  out
grep norm out
grep FERMI out
grep neutra out
grep "average rms" out
grep -i "total energy" out
grep 'VMT ZERO' out
#   ready with info extraction
########################################################################
echo "  -----------------------------------------------------------"
echo "                        FINISHed at: "
echo "   " `date` 
echo "  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
########################################################################
echo
echo  " ############################################################"
echo  " ###############   !!! SCF job FINISHED !!!  ################"
echo  " ############################################################"
echo
#
########################################################################
####        CLEAN UP AND COPY THE DATA TO THE $here DIRECTORY       ####
########################################################################
#
#rm -f *.unformatted
#rm -f *energy_mesh
#rm -f output_potential input_potential
#rm -f density 
#rm -f fort.* 
#rm -f tmat gmat 
mkdir $here/$work_name
res=$?
if test $res -eq 0 ; then
   cp $local/$work_name/$potential $here/$work_name/$potential
   cp $local/$work_name/output* $here/$work_name/.
   cp $local/$work_name/inputcard $here/$work_name/.
   cp $local/$work_name/*dos* $here/$work_name/.
   cp $local/$work_name/*Jij* $here/$work_name/.
   cp $local/$work_name/excdiff $here/$work_name/.
   cp $local/$work_name/$shapefun $here/$work_name/.
   echo
   echo "       OUTPUT COPIED IN "
   echo "  "$here/$work_name
   echo
   cd $local

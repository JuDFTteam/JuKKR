# docker image containing Developlement Tools and the current Intel compilers based on CentOS 7
image: iffregistry.fz-juelich.de/docker-images/centos7-intel-compilers

before_script:
  # set +e prevents sourced scripts from aborting if single commands fail (GitLab CI sets `-e` by default)
  - set +e && source compilervars.sh intel64 && set -e
  # install pip
  - curl -O https://bootstrap.pypa.io/get-pip.py 
  - python get-pip.py 
  - pip install numpy

stages:
  - build
  - test
  - run
  - verify

test:intel:
  stage: test
  script:
    # test if dependencies are working
    - echo 'do some tests here'

build:intel:
  stage: build
  script:
    # compile code
    - cp tests/inc.p .
    - make clean; make serial; cp kkr.x kkr.x_serial
    - make clean; make mpi; cp kkr.x kkr.x_mpi
    - make clean; make omp; cp kkr.x kkr.x_omp
    - make clean; make hybrid; cp kkr.x kkr.x_hybrid
  artifacts:
    paths:
      - kkr.x_serial
      - kkr.x_mpi
      - kkr.x_omp
      - kkr.x_hybrid
    expire_in: 1 day

run:intel:
  stage: run
  script:
    # set environment variables to avoind stack size issue
    - export OMP_NUM_THREADS=1
    - export OMP_STACKSIZE=1g
    - ulimit -s unlimited
    - cd tests
    - ./run_all.py 1
  artifacts:
    paths:
      - tests/test_run*
    expire_in: 2 days

verify:intel:
  stage: verify
  script:
    # use pip to install pytest
    - pip install pytest
    # prepare and execute verification using pytest
    - cd tests
    - pytest -v


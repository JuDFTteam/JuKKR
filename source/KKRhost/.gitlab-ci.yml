# docker image containing Developlement Tools and the current Intel compilers based on CentOS 7
image: iffregistry.fz-juelich.de/docker-images/centos7-intel-compilers


before_script:
  # set +e prevents sourced scripts from aborting if single commands fail (GitLab CI sets `-e` by default)
  - set +e && source compilervars.sh intel64 && set -e
  # install pip
  - curl -O https://bootstrap.pypa.io/get-pip.py 
  - python get-pip.py 
  - pip install numpy
  # set environment variables to avoind stack size issue
  - export OMP_NUM_THREADS=1
  - export OMP_STACKSIZE=1g
  - ulimit -s unlimited


stages:
  - test
  - build
  - run
  - verify


test:intel:
  stage: test
  script:
    # test if dependencies are working
    - echo 'do some tests here'

build:intel:mpi:
  stage: build
  script:
    # compile code
    - cp tests/inc.p .
    #- make clean; make mpi; cp kkr.x kkr.x_mpi
  artifacts:
    paths:
      - kkr.x_mpi
    expire_in: 1 day


run:intel:aiida-kkr:
  image: iffregistry.fz-juelich.de/docker-images/aiida-kkr:latest
  stage: run
  services:
    - name: postgres:latest
      alias: db
    - name: iffregistry.fz-juelich.de/docker-images/centos7-intel-compilers/slurm-daemon:latest
      alias: c1
    - name: iffregistry.fz-juelich.de/docker-images/centos7-intel-compilers/slurm-daemon:latest
      alias: c2
    - name: iffregistry.fz-juelich.de/docker-images/centos7-intel-compilers/slurm-daemon:latest
      alias: c3
    - name: iffregistry.fz-juelich.de/docker-images/centos7-intel-compilers/slurm-daemon:latest
      alias: c4
  variables:
    POSTGRES_USER: aiida
    POSTGRES_DB: aiida_default
    POSTGRES_PASSWORD: password
  script:
    #- cp tests/kkr.x_mpi "${KKR_EXECUTABLE_PATH}"
    - verdi computer list
    - verdi computer show slurmcontrol
    - verdi computer test slurmcontrol
    - verdi calculation plugins
    - verdi code list
    - verdi code show 1


verify:intel:
  stage: verify
  script:
    - echo 'implement tests ...'

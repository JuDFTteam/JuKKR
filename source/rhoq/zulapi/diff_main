336c336
<      +     N,N1,N2,NITMIX,NMIX,IOS,ISP,
---
>      +     N,N1,N2,NITMIX,NMIX,IOS,
406,408c406,407
<      +     ALPHA(0:LMAXD,NSPD,NATYPD),
< c     +     AR(LMMAXD,LMMAXD,NATYPD,NSPIND),
<      +     AR(NSPD*LMMAXD,NSPD*LMMAXD,NATYPD),
---
>      +     ALPHA(0:LMAXD,NATYPD),
>      +     AR(LMMAXD,LMMAXD,NATYPD),
414c413
<      +     GMATLL(NSPIND*LMMAXD,NSPIND*LMMAXD,NSHELD), ! diag elements of G matrix(system)
---
>      +     GMATLL(LMMAXD,LMMAXD,NSHELD), ! diag elements of G matrix(system)
427c426
<      +     PNSSO(NSPD*LMMAXD,NSPD*LMMAXD,       ! non-sph. eigen states of single pot
---
>      +     PNSSO(NSPOD*LMMAXD,NSPOD*LMMAXD,       ! non-sph. eigen states of single pot
429c428
<      +     PTOT(NSPD*LMMAXD,NSPD*LMMAXD,IRMD,2,NATYPD),     !total wavefunction containing the 
---
>      +     PTOT(LMMAXD,LMMAXD,IRMD,2,NATYPD),     !total wavefunction containing the 
431,438c430,435
< c     +     PZ(IRMD,0:LMAXD),
<      +     PZI(IRMD,0:LMAXD,NATYPD,NSPIND),
< c     +     QZ(IRMD,0:LMAXD),
<      +     QZI(IRMD,0:LMAXD,NSPIND),
< c     +     SZ(IRMD,0:LMAXD),
<      +     SZI(IRMD,0:LMAXD,NSPIND),
< c     +     FZ(IRMD,0:LMAXD),
<      +     FZI(IRMD,0:LMAXD,NATYPD,NSPIND),
---
>      +     PZ(IRMD,0:LMAXD),
>      +     PZI(IRMD,0:LMAXD,NATYPD),
>      +     QZ(IRMD,0:LMAXD),
>      +     SZ(IRMD,0:LMAXD),
>      +     FZ(IRMD,0:LMAXD),
>      +     FZI(IRMD,0:LMAXD,NATYPD),
448,449c445,446
<      +     TMATLL(NSPD*LMMAXD,NSPD*LMMAXD,NAEZD),
<      +     TMATLL1(NSPD*LMMAXD,NSPD*LMMAXD,NATYPD),
---
>      +     TMATLL(NSPOD*LMMAXD,NSPOD*LMMAXD,NAEZD),
>      +     TMATLL1(NSPOD*LMMAXD,NSPOD*LMMAXD,NATYPD),
451c448
<      +     DELTALL(NSPD*LMMAXD,NSPD*LMMAXD,NAEZD)
---
>      +     DELTALL(NSPOD*LMMAXD,NSPOD*LMMAXD,NAEZD)
988c985
<             IF (NSPD == 2) THEN
---
>             IF (NSPO == 2) THEN
1109d1105
<           write(6,*) 'IPOT+NSPIN-1=',IPOT+NSPIN-1
1119,1133d1114
< c         WRITE(6,*) "VISP"
< c         DO IR=1,IRMD
< c           WRITE(248, "((I5),(7e17.9))") IR,R(IR,I1),VISP(IR,1)
< c         END DO
< 
< c         WRITE(6,*) "VINS"
< c         DO IR=IRMIND,IRMD
< c           WRITE(248, "((I5),(7e17.9))") IR,R(IR,I1),VISP(IR,1,IPOT)
< c         END DO
< 
< c         WRITE(6,*) "NSPOTD" ,NSPOTD
< c         WRITE(6,*) "NPOTD",NPOTD
< c         WRITE(6,*) "LMPOTD",LMPOTD
< 
<           write(113, *) "I1",I1
1136,1139c1117,1119
<           CALL TMATRX01_SO(.FALSE.,ALPHA(:,:,I1),AR(:,:,I1),
<      +           DRDI(1,I1),E,ICST,INS,NSPO,NSPIN,LMAX,
<      +           PZI(:,:,I1,:),QZI,
<      +           FZI(:,:,I1,:),SZI,
---
>           CALL TMATRX01_SO(.FALSE.,ALPHA(0,I1),AR(1,1,I1),
>      +           DRDI(1,I1),E,ICST,INS,NSPO,LMAX,
>      +           PZ(1,0),QZ(1,0),FZ(1,0),SZ(1,0),
1141,1143c1121,1122
<      +           TMATLL1(1,1,I1),R(1,I1),
<      +           VINS(IRMIND:IRMD,1:LMPOTD,IPOT:IPOT+NSPIN-1),
<      +           VISP(1:IRMD,IPOT:IPOT+NSPIN-1),Z(I1),IRWS(I1),IPAN(I1),
---
>      +           TMATLL1(1,1,I1),R(1,I1),VINS(IRMIND,1,IPOT),
>      +           VISP(1,IPOT),Z(I1),IRWS(I1),IPAN(I1),
1148a1128,1173
> c          write(6,*) "after TMATRX01_SO"
> 
>           IF (IE.EQ.IELAST .AND. test('printtma') ) THEN
>             IF (I1==1) THEN
>               open(unit=665, file="TMAT_REAL_SO",form="formatted")
>               open(unit=663, file="TMAT_SO_diagonal",
>      +                                            form="formatted")
>               OPEN(UNIT=34,FILE="AR_MAIN",FORM="FORMATTED")
>               OPEN(UNIT=35,FILE="ALPHA_MAIN",FORM="FORMATTED")
> 
>             END IF 
>             write(665,*) 'IATOM =',I1
>             write(663,*) 'IATOM =',I1
>             write(34,*) 'IATOM =',I1
>             write(35,*) 'IATOM =',I1
> 
>             do lm1=1,NSPOD*lmmax
>               write(663,"((I5),(2(e17.9,2x)))") 
>      +                  lm1,TMATLL1(lm1,lm1,i1)
>               WRITE(35,"((I5),(2e17.9))")  LM1,ALPHA(LOFLM(LM1),I1) 
>               do lm2=1,NSPOD*lmmax
>                  write(665,"(2(e17.9,2x))") 
>      +                   TMATLL1(lm1,lm2,i1)
>                  WRITE(34,"((2I5),(2e17.9))")  LM1,LM2, 
>      +             AR(LM2,LM1,I1)
>               end do
>             end do
> 
>             IF (I1==NATYP) then
>               close(665)
>               close(663)
>               CLOSE(34)
>               CLOSE(35)
>             END IF
>           END IF
> 
>           IF (OPT('NORMIERU') .AND. NSPO==1 ) THEN
>             do ILC=0,LMAXD
>               do I=1,IRMD
>                PZI(I,ILC,I1)=PZ(I,ILC)
>                FZI(I,ILC,I1)=FZ(I,ILC)
>               end do
>             end do
> 
>           END IF      !OPT NORMIERU and Spherical potential
> 
1153a1179,1180
> c          CALL CHECK_REAL_RL(YR,PNSSO(:,:,IRMIND:IRMD,:,I1),AR,LMMAXD,
> c     +                                  LMPOTD,IRMIND,IRMD,IJEND,R)
1155,1160d1181
<           IF (I1 == 3 ) THEN
<             CALL CHECK_REAL_RL(YR,PNSSO(:,:,IRMIND:IRMD,:,I1),AR(:,:,I1)
<      +                         ,NSPD,LMMAXD,LMPOTD,IRMIND,IRMD,IJEND,R)
< 
< c           STOP "after check AR " 
<           END IF
1199,1203c1220,1221
<             DO ISP=1,NSPIN
<               CALL NORM_COEFF_ASA(PZI(:,:,:,ISP),FZI(:,:,:,ISP),LMAX,
<      +                            LMMAX,NATYP,IRMD,DRDI,IJEND,W,RIJ,YR,
<      +                            LMPOTD,R,LINTERFACE,ISP)
<             END DO
---
>             CALL NORM_COEFF_ASA(PZI,FZI,LMAX,LMMAX,NATYP,IRMD,DRDI,
>      +          IJEND,W,RIJ,YR,LMPOTD,R,LINTERFACE)
1221d1238
< c            DO ISP=1,NSPIN
1223,1227c1240,1244
<               DO I1=1,NATYP
<                 DO IR=1,IRMIN(I1)
<                   DO LM1=1,NSPD*LMMAX
<                     DO LM2=1,NSPD*LMMAX
<                       PTOT(LM2,LM1,IR,1,I1)=
---
>             DO I1=1,NATYP
>               DO IR=1,IRMIN(I1)
>                 DO LM1=1,LMMAX
>                   DO LM2=1,LMMAX
>                     PTOT(LM2,LM1,IR,1,I1)=
1229,1231c1246,1248
<      +                              PZI(IR,LOFLM(LM1),I1,ISP)
<                       IF (KVREL==1) THEN
<                         PTOT(LM2,LM1,IR,2,I1)=
---
>      +                              PZI(IR,LOFLM(LM1),I1)
>                     IF (KVREL==1) THEN
>                       PTOT(LM2,LM1,IR,2,I1)=
1233,1234c1250,1251
<      +                              FZI(IR,LOFLM(LM1),I1,ISP)
<                       END IF
---
>      +                              FZI(IR,LOFLM(LM1),I1)
>                     END IF
1236,1249c1253,1266
<                     END DO       !LM2
<                   END DO         !LM1
<                 END DO           !IR
< 
<                 DO IR=IRMIN(I1),IRMD
<                   DO LM1=1,NSPD*LMMAX
<                     DO LM2=1,NSPD*LMMAX
<                       PTOT(LM2,LM1,IR,1,I1)=PNSSO(LM2,LM1,IR,1,I1) 
<                       IF (KVREL==1) THEN
<                         PTOT(LM2,LM1,IR,2,I1)=PNSSO(LM2,LM1,IR,2,I1) 
<                       END IF
<                     END DO       !LM2
<                   END DO         !LM1
<                 END DO           !IR
---
>                   END DO       !LM2
>                 END DO         !LM1
>               END DO           !IR
> 
>               DO IR=IRMIN(I1),IRMD
>                 DO LM1=1,LMMAX
>                   DO LM2=1,LMMAX
>                     PTOT(LM2,LM1,IR,1,I1)=PNSSO(LM2,LM1,IR,1,I1) 
>                     IF (KVREL==1) THEN
>                       PTOT(LM2,LM1,IR,2,I1)=PNSSO(LM2,LM1,IR,2,I1) 
>                     END IF
>                   END DO       !LM2
>                 END DO         !LM1
>               END DO           !IR
1251c1268
<               END DO             !I1-NATYP
---
>             END DO             !I1-NATYP
1281c1298
<               WRITE(6,*) "BEFORE NORM_COEFF nonspherical ISP=",ISP
---
>             WRITE(6,*) "BEFORE NORM_COEFF nonspherical"
1287c1304
<               CALL NORM_COEFF_FP(IRMIN,IRCUT,LMAX,
---
>             CALL NORM_COEFF_FP(IRMIN,IRCUT,LMAX,
1290,1293c1307
<      +                   IEND,DRDI,R,IRWS,LINTERFACE,ISP)
< 
< c            END DO    !ISP=1,NSPIN
< 
---
>      +                   IEND,DRDI,R,IRWS,LINTERFACE)
1328,1357c1342,1346
< 
< c         DO 340 LM1SO = 1,NSPD*LMMAXD
< c           LM1 = MOD(LM1SO-1,LMMAXD)+1
< c           DO 330 LM2SO = 1,NSPD*LMMAXD
< c             LM2 = MOD(LM2SO-1,LMMAXD)+1
< c             CFACL = CFAC**(LOFLM(LM1)+LOFLM(LM2))
< c             IF (((LM1SO .LE. LMMAXD) .AND. (LM2SO .LE. LMMAXD)) 
< c    +                  .OR.
< c    +            ((LM1SO .GT. LMMAXD) .AND. (LM2SO .GT. LMMAXD)) ) 
< c    +                      then 
< c               TMATLL(LM2SO,LM1SO,I1) = CFACL*
< c    +           (TMATLL1(LM2SO,LM1SO,INV)-TREFLL(LM2,LM1,RF))
< c             ELSE
< c               TMATLL(LM2SO,LM1SO,I1) = CFACL*
< c    +           (TMATLL1(LM2SO,LM1SO,INV))
< c             END IF
< c330        CONTINUE
< c340      CONTINUE
< c         WRITE(27,*) "TMATLL in MAIN before TREF"
< c          WRITE(27,*) "EZ",EZ 
< 
< c         DO LM1=1,NSPD*LMMAXD
< c           DO LM2=1,NSPD*LMMAXD
< c             WRITE(27,"((3I5),(2e17.9))") I1,LM2,LM1,
< c    +                               TMATLL1(LM2,LM1,I1)
< c           END DO
< c         END DO
< 
<           DO LM1 = 1,LMMAXD
<             DO LM2 = 1,LMMAXD
---
>           DO 340 LM1SO = 1,NSPOD*LMMAXD
>             LM1 = MOD(LM1SO-1,LMMAXD)+1
> c            write(29, *) "LM1SO,LM1:", LM1SO,LM1
>             DO 330 LM2SO = 1,NSPOD*LMMAXD
>               LM2 = MOD(LM2SO-1,LMMAXD)+1
1359,1376c1348,1359
<                 TMATLL(LM2,LM1,I1) = CFACL*
<      +           (TMATLL1(LM2,LM1,INV)-TREFLL(LM2,LM1,RF))
< c                TMATLL(LM2SO,LM1SO,I1) = CFACL*
< c     +           (TMATLL1(LM2SO,LM1SO,INV))
<                 TMATLL(LM2+LMMAXD,LM1+LMMAXD,I1) = CFACL*
<      +           (TMATLL1(LM2+LMMAXD,LM1+LMMAXD,INV)-TREFLL(LM2,LM1,RF))
<             END DO
<             DO LM2 = LMMAXD+1,2*LMMAXD
<               CFACL = CFAC**(LOFLM(LM1)+LOFLM(LM2-LMMAXD))
<                 TMATLL(LM2,LM1,I1) = CFACL*TMATLL1(LM2,LM1,INV)
<             END DO
<           END DO     
<           DO LM1 = LMMAXD+1,2*LMMAXD
<             DO LM2 = 1,LMMAXD
<               CFACL = CFAC**(LOFLM(LM1-LMMAXD)+LOFLM(LM2))
<                 TMATLL(LM2,LM1,I1) = CFACL*TMATLL1(LM2,LM1,INV)
<             END DO
<           END DO
---
>               IF (((LM1SO .LE. LMMAXD) .AND. (LM2SO .LE. LMMAXD)) 
>      +                  .OR.
>      +            ((LM1SO .GT. LMMAXD) .AND. (LM2SO .GT. LMMAXD)) ) 
>      +                      then 
>                 TMATLL(LM2SO,LM1SO,I1) = CFACL*
>      +           (TMATLL1(LM2SO,LM1SO,INV)-TREFLL(LM2,LM1,RF))
>               ELSE
>                 TMATLL(LM2SO,LM1SO,I1) = CFACL*
>      +           (TMATLL1(LM2SO,LM1SO,INV))
>               END IF
>  330        CONTINUE
>  340      CONTINUE
1378,1385d1360
< c         WRITE(27,*) "TMATLL in MAIN after TREF"
< c          WRITE(27,*) "EZ",EZ 
< 
< c         DO LM1=1,NSPD*LMMAXD
< c           DO LM2=1,NSPD*LMMAXD
< c             WRITE(27,"((3I5),(2e17.9))") I1,LM2,LM1,TMATLL(LM2,LM1,I1)
< c           END DO
< c         END DO
1419c1394
<      +       INS,NSPO,ALAT,LMAX,LMMAX,NSPD*LMMAX,MD,E2,NSPIN,MAXMESH,
---
>      +       INS,NSPO,ALAT,LMAX,LMMAX,NSPOD*LMMAX,MD,E2,NSPIN,MAXMESH,
